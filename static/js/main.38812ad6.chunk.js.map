{"version":3,"sources":["helpers.js","App.js","index.js"],"names":["padTime","time","toString","padStart","App","useState","timeLeft","setTimeLeft","timerRunning","setTimerRunning","timerRef","useRef","minutes","Math","floor","seconds","className","id","onClick","clearInterval","current","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uJAAaA,EAAU,SAACC,GACtB,OAAOA,EAAKC,WAAWC,SAAS,EAAG,M,cCsEtBC,MAnEf,WACE,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EAAWC,mBAEXC,EAAUZ,EAAQa,KAAKC,MAAMR,EAAW,KACxCS,EAAUf,EAAQM,EAAqB,GAAVM,GAuBnC,OACE,qBAAKI,UAAU,MAAf,SACE,sBAAMA,UAAU,4BAAhB,SACE,sBAAKA,UAAU,iCAAf,UACE,oBAAIA,UAAU,QAAd,sBACA,sBAAKA,UAAU,QAAf,UACE,+BAAOJ,IACP,qCACA,+BAAOG,OAET,sBAAKC,UAAU,mBAAf,UACIR,EASA,wBACEQ,UAAU,SACVC,GAAG,iBACHC,QAlCK,WACjBC,cAAcT,EAASU,SACvBX,GAAgB,IA6BN,mBARA,wBACEO,UAAU,SACVC,GAAG,iBACHC,QApCK,WACjBR,EAASU,QAAUC,aAAY,WAC7Bd,GAAY,SAACD,GACX,GAAIA,EAAW,EAAG,OAAOA,EAAW,OAErC,KAEHG,GAAgB,IA0BN,mBAgBF,wBAAQO,UAAU,SAASC,GAAG,OAAOC,QAlC7B,WAChBC,cAAcT,EAASU,SACvBX,GAAgB,GAChBF,EAAY,OA+BJ,6BCzDZe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.38812ad6.chunk.js","sourcesContent":["export const padTime = (time) => {\r\n  return time.toString().padStart(2, \"0\");\r\n};\r\n","import { useState, useRef } from \"react\";\nimport { padTime } from \"./helpers\";\nimport \"./App.css\";\n\nfunction App() {\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const timerRef = useRef();\n\n  const minutes = padTime(Math.floor(timeLeft / 60));\n  const seconds = padTime(timeLeft - minutes * 60);\n\n  const startTimer = () => {\n    timerRef.current = setInterval(() => {\n      setTimeLeft((timeLeft) => {\n        if (timeLeft > 1) return timeLeft - 1;\n      });\n    }, 1000);\n\n    setTimerRunning(true);\n  };\n\n  const pauseTimer = () => {\n    clearInterval(timerRef.current);\n    setTimerRunning(false);\n  };\n\n  const stopTimer = () => {\n    clearInterval(timerRef.current);\n    setTimerRunning(false);\n    setTimeLeft(25 * 60);\n  };\n\n  return (\n    <div className=\"App\">\n      <main className=\"main flex-column centered\">\n        <div className=\"pomodoro-container flex-column\">\n          <h1 className=\"title\">Pomodoro</h1>\n          <div className=\"timer\">\n            <span>{minutes}</span>\n            <span>:</span>\n            <span>{seconds}</span>\n          </div>\n          <div className=\"buttons flex-row\">\n            {!timerRunning ? (\n              <button\n                className=\"button\"\n                id=\"start-or-pause\"\n                onClick={startTimer}\n              >\n                Start\n              </button>\n            ) : (\n              <button\n                className=\"button\"\n                id=\"start-or-pause\"\n                onClick={pauseTimer}\n              >\n                Pause\n              </button>\n            )}\n            <button className=\"button\" id=\"stop\" onClick={stopTimer}>\n              Stop\n            </button>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}